//--------------------------------------------------------------------
// C++에서 포인터 대신 사용할 수 있는 레퍼런스(reference)
// 레퍼런스 - 메모리를 차지한 객체에 붙이는 별명
// 왜? - 포인터를 잘 이해하는 프로그래머가 편하고 쉽게 다른 지역의 메모리에 
//       access하기 위한 도구
//--------------------------------------------------------------------

#include <iostream>
#include "save.h"

//--------
int main()
//--------
{
	int a { 1 };
	int& r { a };

	// [문제] a와 r의 정체를 파악해주세요.

	std::cout << "a의 메모리 크기 - " << sizeof a << "\n";
	std::cout << "a의 메모리 주소 - " << std::addressof(a) << "\n";
	std::cout << "a의 데이터 타입 - " << typeid(a).name() << "\n\n";

	std::cout << "r의 메모리 크기 - " << sizeof r << "\n";
	std::cout << "r의 메모리 주소 - " << std::addressof(r) << "\n";
	std::cout << "r의 데이터 타입 - " << typeid(r).name() << "\n\n";

	save("메인.cpp");
}