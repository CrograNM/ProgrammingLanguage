//--------------------------------------------------------------------
// 10. 27 월요일 - 중간시험  
//--------------------------------------------------------------------
// 동적할당(Dynamic Allocation) - dynamic은 run-time으로 해석해야 함
//--------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;


// [문제] free-store는 메모리를 얼마나 줄 수 있나요?

//--------
int main()
//--------
{
	save("main.cpp");

	int cnt {};
	while (true) { 
		// 메모리 요청
		// 1 - 성공
		// 2 - 메모리가 고갈되면 실패 - C++ 에서는 메모리 관리자가 예외를 던진다.
		
		try {
			new char[2'000'000'000];
		}
		catch (const std::exception& e) {
			cout << "표준 예외객체의 크기 - " << sizeof(e) << endl;
			cout << "메모리 고갈되었음" << endl;
			cout << e.what() << endl;

			//return 20251013;
			exit(20251013);  // main이 아닌 곳에서 프로그램 종료하려면 사용
		}
		cout << ++cnt << " 번 할당 성공" << endl;

		// 위처럼 try-catch는 성능에 영향을 미치므로 속도 중심인 C++에서는 잘 사용하지 않는다.
	}
}